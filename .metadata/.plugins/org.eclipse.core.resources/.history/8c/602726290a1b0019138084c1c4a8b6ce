package com.anthonyang.ds.collections;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class CollectionsDemo {

	private static void collectionsDemo() {
		// boolean addAll(Collection<? super T> c, T... elements);
		List<String> list = new ArrayList<>();
		list.add("a");
		list.add("b");
		list.add("c");

		String[] array = { "d" };

		//list.addAll(Arrays.asList(array));
		/*
		 * is identical to that of c.addAll(Arrays.asList(elements)), but this
		 * method is likely to run significantly faster under most
		 * implementations.
		 */
		Collections.addAll(list, array);
		System.out.println("list: " + list);
		
		/*
		 * static <T extends Comparable<? super T>> void sort(List<T> list)
		 * Sorts the specified list into ascending order, according to the natural ordering of its elements. 
		 * All elements in the list must implement the Comparable interface
		 */
		Collections.sort(list);
		System.out.println("Sorted list: " + list);

	}

	public static void main(String[] args) {
		collectionsDemo();
	}

}
